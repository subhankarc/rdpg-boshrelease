#!/var/vcap/packages/bash-4.3/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

jobName="rdpgd-manager"
vmName="<%= name %>" # BOSH VM name
vmIndex="<%= index %>" # Index within cluster
deploymentName="<%= spec.deployment %>"
domainName="<%= spec.dns_domain_name %>"
vmFullName="${vmName}/${vmIndex}" # full job name
nodeName="${deploymentName}-${vmName}-${vmIndex}"

logPath="/var/vcap/sys/log/${jobName}"
mkdir -p "${logPath}"
exec &>> "${logPath}/${jobName}.log" # STD{OUT,ERR}
echo -e "$(date +'%Y-%m-%dT%H:%M:%S') $(whoami) > $0 $*"

source /var/vcap/jobs/${jobName}/shell/functions

<% if p('rdpg_manager.debug') == "true" %>turn_debugging_on<% end %>

jobPath="/var/vcap/jobs/${jobName}"
pkgPath="/var/vcap/packages/${jobName}"
runPath="/var/vcap/sys/run/${jobName}"
tmpPath="/var/vcap/sys/tmp/${jobName}"
storePath="/var/vcap/store/${jobName}"

userName="vcap"
groupName="vcap"
LANG="en_US.UTF-8"
HOME="${HOME:-"/home/${userName}"}"
pidFile="${runPath}/${jobName}.pid"
LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-}"
export LANG HOME LD_LIBRARY_PATH

RDPGD_LOG_LEVEL="<%= p('rdpg_manager.log_level') %>"
RDPGD_SB_PORT="<%= p('rdpg_manager.sb_port') %>"
RDPGD_SB_USER="<%= p('rdpg_manager.sb_user') %>"
RDPGD_SB_PASS="<%= p('rdpg_manager.sb_pass') %>"
RDPGD_ADMIN_PORT="<%= p('rdpg_manager.admin_port') %>"
RDPGD_ADMIN_USER="<%= p('rdpg_manager.admin_user') %>"
RDPGD_ADMIN_PASS="<%= p('rdpg_manager.admin_pass') %>"
RDPGD_ADMIN_PG_URI="<%= p('rdpg_manager.admin_pg_uri') %>"
RDPGD_PIDFILE=${pidFile}

export RDPGD_PIDFILE RDPGD_LOG_LEVEL RDPGD_SB_PORT RDPGD_SB_USER RDPGD_SB_PASS \
  RDPGD_ADMIN_PORT RDPGD_ADMIN_USER RDPGD_ADMIN_PASS RDPGD_ADMIN_PG_URI

rdpgDB="<%= p('rdpg_manager.db_name') %>"
rdpgUser="<%= p('rdpg_manager.db_user') %>"
rdpgPass="<%= p('rdpg_manager.db_pass') %>"
pgPort="<%= p('pgbdr.port') %>"
consulPort="<%= p('consul.port') %>"

# TODO: The following will disappear when their configuration goes into rdpgd
pgbPort="<%= p('pgbouncer.listen_port').to_s %>"
hapWritePort="<%= p('haproxy.write_port').to_s %>"
hapReadPort="<%= p('haproxy.read_port').to_s %>"

nodes=() # TODO: Nodes must now come from consul...

add_packages_to_path

configure_job_paths

if ! [[ -d ${jobPath}/config && -s ${jobPath}/config/pgpass ]]
then
  mkdir -p ${jobPath}/config
  user chown ${jobPath}/config
  echo "*:*:*:${rdpgUser}:${rdpgPass}" > ${jobPath}/config/pgpass 
  cp ${jobPath}/config/pgpass /home/vcap/.pgpass 
  touch /home/vcap/.pgpass
  user chown ${jobPath}/config/pgpass 
  user chown /home/vcap/.pgpass
  chmod 0600 ${jobPath}/config/pgpass  /home/vcap/.pgpass
fi

set_pid

