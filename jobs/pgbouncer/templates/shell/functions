#!/usr/bin/env bash

fail() { 
  echo "$*" >&2 
  exit 1 
}

user() {
  local _action=$1 ; shift
  case ${_action} in
    (exec)  exec chpst -u "${userName}:${groupName}" "$@" ;;
    (run)   chpst -u "${userName}:${groupName}" "$@"      ;;
    (chown) chown -R "${userName}:${groupName}" "$@"      ;;
  esac
}

send_signal() { 
  if [[ -s ${pidFile} ]]
  then
    pid=$(head -1 ${pidFile})
    if (( ${pid:-0} > 0 ))
    then kill -${1} ${pid}
    fi
  fi
}

turn_debugging_on() {
  echo "Turning Debugging On"
  export PS4='+(${BASH_SOURCE}:${LINENO})> ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
  export DEBUG="true" 
  set -x
}

add_packages_to_path() { # Add all packages' /bin & /sbin into $PATH
  for _path in $(ls -d /var/vcap/packages/*/*bin)
  do PATH="${_path}:${PATH}"
  done ; export PATH
}

configure_job_paths() {
  paths=(
    "${jobPath}"
    "${runPath}"
    "${logPath}"
    "${tmpPath}"
    "${storePath}"
    "${storePath}/config"
  )
  if (( ${UID} == 0 ))
  then
    for _path in "${paths[@]}"
    do
      [[ -d ${_path} ]] || mkdir -p "${_path}"
      chown -R ${userName}:${groupName} "${_path}"
      chmod 0775 "${_path}"
    done
  fi
}

graceful_stop() {
  rm -f ${pidFile}
  exit 0 # Normal exit, return code 0
}

configure_pgbouncer() {
  mkdir -p ${jobPath}/config

  cat > ${jobPath}/config/pgbouncer.ini <<EOF
[pgbouncer]
listen_port = ${pgbListenPort}
listen_addr = ${pgbListenAddr}
auth_type = ${pgbAuthType}
auth_file = ${storePath}/config/users
logfile = ${logPath}/${jobName}.log
pidfile = ${runPath}/${jobName}.pid
admin_users = ${pgbAdminUser}
unix_socket_dir = ${runPath}
pool_mode = ${pgbPoolMode}
ignore_startup_parameters = extra_float_digits

[databases]
template1 = host=${pgbdrNodes[${vmIndex}]} port=${pgPort} dbname=template1
${rdpgDB} = host=${pgbdrNodes[${vmIndex}]} port=${pgPort} dbname=${rdpgDB}
EOF

  cat > ${jobPath}/config/users <<EOF
"${pgbAdminUser}" "${pgbAdminPass}"
"${rdpgUser}" "${rdpgPass}"
EOF

  for file in pgbouncer.ini users
  do
    if ! [[ -s ${storePath}/config/${file} ]]
    then cp ${jobPath}/config/${file} ${storePath}/config/${file}
    fi
  done
  user chown ${storePath}
}
