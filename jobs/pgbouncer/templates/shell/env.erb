#!/usr/bin/env bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

vmName="<%= name %>" # BOSH VM name
vmIndex="<%= index %>" # Index within cluster
vmFullName="${vmName}/${vmIndex}" # full job name

jobName="pgbouncer"

logPath="/var/vcap/sys/log/${jobName}"
mkdir -p "${logPath}"
exec &> >(tee -a "${logPath}/${jobName}.log") # STD{OUT,ERR}
echo -e "$(date +'%Y-%m-%dT%H:%M:%S') $(whoami) > $0 $*"

source /var/vcap/jobs/${jobName}/shell/functions

<% if p('pgbdr.debug') == "true" %>turn_debugging_on<% end %>

jobPath="/var/vcap/jobs/${jobName}"
pkgPath="/var/vcap/packages/${jobName}"
runPath="/var/vcap/sys/run/${jobName}"
tmpPath="/var/vcap/sys/tmp/${jobName}"
storePath="/var/vcap/store/${jobName}"

userName="vcap"
groupName="vcap"
LANG="en_US.UTF-8"
HOME="${HOME:-"/home/${userName}"}"
binary="${pkgPath}/bin/${jobName}"
binaryArgs=(-d ${jobPath}/config/pgbouncer.ini)
pidFile="${runPath}/${jobName}.pid"
LD_LIBRARY_PATH="/var/vcap/packages/libevent/lib"
export LANG HOME LD_LIBRARY_PATH

rdpgDB="<%= p('rdpg.db_name') %>"
rdpgUser="<%= p('rdpg.db_user') %>"
rdpgPass="<%= p('rdpg.db_pass') %>"
pgPort="<%= p('pgbdr.port') %>"
pgbAdminUser=<%= p('pgbouncer.admin_user') %>
pgbAdminPass=<%= p('pgbouncer.admin_pass') %>
pgbAuthType=<%= p('pgbouncer.auth_type') %>
pgbListenAddr=<%= p('pgbouncer.listen_addr') %>
pgbListenPort=<%= p('pgbouncer.listen_port') %>
pgbPoolMode=<%= p('pgbouncer.pool_mode') %>

add_packages_to_path

configure_job_paths

pgbdrNodes=(<% p('rdpg.nodes').each do |node| %> <%= node %> <% end %>)

configure_pgbouncer

