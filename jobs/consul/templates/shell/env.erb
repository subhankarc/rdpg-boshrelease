#!/usr/bin/env bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

vmName="<%= name %>" # BOSH VM name
vmIndex="<%= index %>" # Index within cluster
vmFullName="${vmName}/${vmIndex}" # full job name
deploymentName="<%= spec.deployment %>"
domainName="<%= spec.dns_domain_name %>"

jobName="consul"

logPath="/var/vcap/sys/log/${jobName}"
mkdir -p "${logPath}"
exec &> >(tee -a "${logPath}/${jobName}.log") # STD{OUT,ERR}
echo -e "$(date +'%Y-%m-%dT%H:%M:%S') $(whoami) > $0 $*"

source /var/vcap/jobs/${jobName}/shell/functions

<% if p('pgbdr.debug') == "true" %>turn_debugging_on<% end %>

jobPath="/var/vcap/jobs/${jobName}"
pkgPath="/var/vcap/packages/${jobName}"
runPath="/var/vcap/sys/run/${jobName}"
tmpPath="/var/vcap/sys/tmp/${jobName}"
storePath="/var/vcap/store/${jobName}"

userName="vcap"
groupName="vcap"
LANG="en_US.UTF-8"
HOME="${HOME:-"/home/${userName}"}"
binary="${pkgPath}/bin/${jobName}"
pidFile="${runPath}/${jobName}.pid"
binaryArgs=(
  -pid-file "${pidFile}"
  -data-dir "${storePath}"
  -config-dir "${jobPath}/config"
)
for _path in $(find $(dirname ${storePath}) -type d -name consul)
do binaryArgs+=(-config-dir ${_path})
done

LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-}"
GOMAXPROCS=2

PGPASSFILE="/home/vcap/.pgpass"

export LANG HOME LD_LIBRARY_PATH GOMAXPROCS PGPASSFILE

consulPort="<%= p("consul.port","8500") %>"
consulSSLCa="<%= p("consul.ssl_ca","") %>"
consulSSLCert="<%= p("consul.ssl_cert","") %>"
consulSSLKey="<%= p("consul.ssl_key","") %>"
consulNodes=(<% p('rdpg.nodes').each do |node| %> <%= node %> <% end %>)
consulNodeName="${deploymentName}-${vmName}-${vmIndex}"
haproxyPort="<%= p('haproxy.port','') %>"
haproxyWritePort="<%=p('haproxy.write_port').to_s %>"
pgbListenPort=<%= p('pgbouncer.listen_port') %>
rdpgDB=<%= p('rdpg.db_name') %>

add_packages_to_path

configure_job_paths

configure_consul

