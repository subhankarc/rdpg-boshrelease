---
meta:
  environment: (( merge ))
  dns_root: (( merge ))
  security_groups: (( merge ))
  persistent_disk: 4096

  stemcell:
    name: bosh-aws-xen-centos-7-go_agent
    version: latest

jobs:
  - name: rdpgmc

  resource_pool: manager_cluster
    persistent_disk: 512_000

    networks:
      - name: rdpg
        default: [ dns, gateway ]
        static_ips: [ 10.10.1.10-10.10.1.12 ]

    properties:
      pgbdr:
        debug: "false"
        hba_config: |+
        # Any custom pg_hba.conf lines go here...
        max_connections: "2000"
        shared_buffers: "512MB"
        effective_cache_size: "1536MB"
        work_mem: "262kB"
        maintenance_work_mem: "128MB"
        checkpoint_segments: "32"
        checkpoint_completion_target: "0.7"
        wal_buffers: "16MB"
        default_statistics_target: "100"
      pgbouncer:
        debug: "false"
        admin_pass: "rdpgadmin"
      consul:
        debug: "false"
        server: true
        join_node: 10.244.2.2
        join_nodes: [ 10.10.1.10-10.10.1.12 ]
      haproxy:
        admin_user: haproxyadmin
        admin_pass: pleasechangethis
        admin_port: 9999
      rdpgd_manager:
        debug: "false"
        log_level: "info"

  - name: rdpgsc1
    resource_pool: service_cluster_1
    persistent_disk: 1_024_000
    networks:
      - name: rdpg
        default: [ dns, gateway ]
        static_ips: [ 10.10.1.13-10.10.1.14 ]
    properties:
      pgbdr:
        debug: "false"
        hba_config: |+
        # Any custom pg_hba.conf lines go here...
        max_connections: "2000"
        shared_buffers: "512MB"
        effective_cache_size: "1536MB"
        work_mem: "262kB"
        maintenance_work_mem: "128MB"
        checkpoint_segments: "32"
        checkpoint_completion_target: "0.7"
        wal_buffers: "16MB"
        default_statistics_target: "100"
      pgbouncer:
        debug: "false"
        admin_pass: "rdpgadmin"
      consul:
        debug: "false"
        server: false
        join_node: 10.244.2.2
      haproxy:
        admin_user: haproxyadmin
        admin_pass: pleasechangethis
        admin_port: 9999
      rdpgd_service:
        debug: "false"
        log_level: "info"
        cluster_name: "rdpgsc1"
        pool_size: 20

  - name: rdpgsc2
    resource_pool: service_cluster_2
    persistent_disk: 1_024_000
    networks:
      - name: rdpg
        default: [ dns, gateway ]
        static_ips: [ 10.10.1.13-15.10.1.16 ]
    properties:
      pgbdr:
        debug: "false"
        hba_config: |+
        # Any custom pg_hba.conf lines go here...
        max_connections: "2000"
        shared_buffers: "512MB"
        effective_cache_size: "1536MB"
        work_mem: "262kB"
        maintenance_work_mem: "128MB"
        checkpoint_segments: "32"
        checkpoint_completion_target: "0.7"
        wal_buffers: "16MB"
        default_statistics_target: "100"
      pgbouncer:
        debug: "false"
        admin_pass: "rdpgadmin"
      consul:
        debug: "false"
        server: false
        join_node: 10.244.2.2
      haproxy:
        admin_user: haproxyadmin
        admin_pass: pleasechangethis
        admin_port: 9999
      rdpgd_service:
        debug: "false"
        log_level: "info"
        cluster_name: "rdpgsc2"
        pool_size: 20
  - name: acceptance_tests
    networks:
      - name: rdpg
        default: [dns, gateway]

compilation:
  cloud_properties:
    instance_type: m3.small

resource_pools:
  - name: rdpgmc
    cloud_properties:
      instance_type: m3.medium

  - name: rdpgsc1
    cloud_properties:
      instance_type: m3.xlarge

  - name: rdpgsc2
    cloud_properties:
      instance_type: m3.xlarge

  - name: errand_a
    cloud_properties:
      instance_type: m3.small

networks:
  - name: rdpg
    type: manual
    subnets:
    - range: 10.10.1.0/24
      name: rdpg
      dns: [10.10.0.2]
      gateway: 10.10.1.1
      reserved:
        - 10.10.1.2-10.10.1.5
        - 10.10.1.250-10.10.1.254
      static:
        - 10.10.1.10-10.10.1.60
      cloud_properties:
        subnet_ids: (( meta.subnet_ids ))
        security_groups: (( meta.security_groups ))

  - name: floating
    type: vip
    cloud_properties:
      subnet_ids: (( meta.subnet_ids ))
      security_groups: (( meta.security_groups ))

properties: {}
